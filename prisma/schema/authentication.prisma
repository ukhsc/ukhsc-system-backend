model FederatedAccount {
  id                  Int               @id @default(autoincrement())
  provider            FederatedProvider
  provider_identifier String /// User identifier from the provider (e.g. Google ID)
  email               String?

  member_id String
  member    StudentMember @relation(fields: [member_id], references: [id])
}

enum FederatedProvider {
  Google
  GoogleWorkspace /// Google Workspace for Education
}

// Google Workspace account configuration for a school
model SchoolAccountConfig {
  /// Human-readable username format (e.g. "s + 7-digit student ID")
  username_format         String
  student_username_format String /// Regex pattern for student usernames where capture group 1 extracts the student ID (e.g. "s([0-9]{7})" - group 1 captures the 7-digit ID)
  /// Human-readable password format (e.g. same as birthday)
  password_format         String
  domain_name             String

  school_id Int           @unique
  school    PartnerSchool @relation(fields: [school_id], references: [id])
}

model UserDevice {
  id               Int                   @id @default(autoincrement())
  name             String
  type             DeviceType
  operating_system DeviceOperatingSystem
  login_activities LoginActivity[]
}

model LoginActivity {
  id         Int        @id @default(autoincrement())
  device_id  Int
  device     UserDevice @relation(fields: [device_id], references: [id], onDelete: Cascade)
  ip_address String?
  login_time DateTime   @default(now())
}

enum DeviceType {
  Browser
  Mobile
  Unknown
}

enum DeviceOperatingSystem {
  Android
  iOS
  Unknown
}
